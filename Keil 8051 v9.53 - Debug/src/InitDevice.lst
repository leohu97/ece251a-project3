C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/liaohu/SimplicityStudio/v4_workspace/Final project_1/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE
                    -) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/liaohu/Simp
                    -licityStudio/v4_workspace/Final project_1/inc/graphics;/Users/liaohu/SimplicityStudio/v4_workspace/Final project_1/inc;/
                    -Users/liaohu/SimplicityStudio/v4_workspace/Final project_1/inc/config;/Applications/Simplicity Studio.app/Contents/Eclip
                    -se/developer/sdks/8051/v4.0.3//kits/common/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/
                    -v4.0.3//kits/EFM8BB3_SLSTK2022A/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//
                    -Device/EFM8BB3/peripheral_driver/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//ki
                    -ts/common/drivers/efm8_joystick;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/co
                    -mmon/drivers/efm8_memory_lcd/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/c
                    -ommon/drivers/efm8_memory_lcd/inc/graphics;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0
                    -.3//kits/common/drivers/efm8_memory_lcd/inc/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8
                    -051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//De
                    -vice/EFM8BB3/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/ef
                    -m8_retargetserial) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          #include "function_generator.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              ADC_0_enter_DefaultMode_from_RESET();
  34   1              DAC_0_enter_DefaultMode_from_RESET();
  35   1              DAC_1_enter_DefaultMode_from_RESET();
  36   1              DACGCF_0_enter_DefaultMode_from_RESET();
  37   1              VREF_0_enter_DefaultMode_from_RESET();
  38   1              CLOCK_0_enter_DefaultMode_from_RESET();
  39   1              TIMER01_0_enter_DefaultMode_from_RESET();
  40   1              TIMER16_3_enter_DefaultMode_from_RESET();
  41   1              TIMER16_4_enter_DefaultMode_from_RESET();
  42   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 2   

  43   1              SPI_0_enter_DefaultMode_from_RESET();
  44   1              UART_0_enter_DefaultMode_from_RESET();
  45   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  46   1              // Restore the SFRPAGE
  47   1              SFRPAGE = SFRPAGE_save;
  48   1              // [Config Calls]$
  49   1      
  50   1      }
  51          
  52          //================================================================================
  53          // WDT_0_enter_DefaultMode_from_RESET
  54          //================================================================================
  55          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  56   1              // $[WDTCN - Watchdog Timer Control]
  57   1              SFRPAGE = 0x00;
  58   1              //Disable Watchdog with key sequence
  59   1              WDTCN = 0xDE; //First key
  60   1              WDTCN = 0xAD; //Second key
  61   1              // [WDTCN - Watchdog Timer Control]$
  62   1      
  63   1      }
  64          
  65          //================================================================================
  66          // PORTS_0_enter_DefaultMode_from_RESET
  67          //================================================================================
  68          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  69   1              // $[P0 - Port 0 Pin Latch]
  70   1              // [P0 - Port 0 Pin Latch]$
  71   1      
  72   1              // $[P0MDOUT - Port 0 Output Mode]
  73   1              /***********************************************************************
  74   1               - P0.0 output is open-drain
  75   1               - P0.1 output is open-drain
  76   1               - P0.2 output is open-drain
  77   1               - P0.3 output is open-drain
  78   1               - P0.4 output is push-pull
  79   1               - P0.5 output is open-drain
  80   1               - P0.6 output is push-pull
  81   1               - P0.7 output is open-drain
  82   1               ***********************************************************************/
  83   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  84   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  85   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  86   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  87   1              // [P0MDOUT - Port 0 Output Mode]$
  88   1      
  89   1              // $[P0MDIN - Port 0 Input Mode]
  90   1              /***********************************************************************
  91   1               - P0.0 pin is configured for analog mode
  92   1               - P0.1 pin is configured for digital mode
  93   1               - P0.2 pin is configured for digital mode
  94   1               - P0.3 pin is configured for digital mode
  95   1               - P0.4 pin is configured for digital mode
  96   1               - P0.5 pin is configured for digital mode
  97   1               - P0.6 pin is configured for digital mode
  98   1               - P0.7 pin is configured for digital mode
  99   1               ***********************************************************************/
 100   1              P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 101   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 102   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 103   1              // [P0MDIN - Port 0 Input Mode]$
 104   1      
 105   1              // $[P0SKIP - Port 0 Skip]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 3   

 106   1              /***********************************************************************
 107   1               - P0.0 pin is skipped by the crossbar
 108   1               - P0.1 pin is skipped by the crossbar
 109   1               - P0.2 pin is skipped by the crossbar
 110   1               - P0.3 pin is skipped by the crossbar
 111   1               - P0.4 pin is not skipped by the crossbar
 112   1               - P0.5 pin is not skipped by the crossbar
 113   1               - P0.6 pin is not skipped by the crossbar
 114   1               - P0.7 pin is not skipped by the crossbar
 115   1               ***********************************************************************/
 116   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 117   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 118   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 119   1                              | P0SKIP_B7__NOT_SKIPPED;
 120   1              // [P0SKIP - Port 0 Skip]$
 121   1      
 122   1              // $[P0MASK - Port 0 Mask]
 123   1              /***********************************************************************
 124   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 125   1               event
 126   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 127   1               event
 128   1               - P0.2 pin logic value is compared to P0MAT.2
 129   1               - P0.3 pin logic value is compared to P0MAT.3
 130   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 131   1               event
 132   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 133   1               event
 134   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 135   1               event
 136   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 137   1               event
 138   1               ***********************************************************************/
 139   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 140   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 141   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 142   1              // [P0MASK - Port 0 Mask]$
 143   1      
 144   1              // $[P0MAT - Port 0 Match]
 145   1              // [P0MAT - Port 0 Match]$
 146   1      
 147   1      }
 148          
 149          //================================================================================
 150          // PORTS_1_enter_DefaultMode_from_RESET
 151          //================================================================================
 152          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 153   1              // $[P1 - Port 1 Pin Latch]
 154   1              // [P1 - Port 1 Pin Latch]$
 155   1      
 156   1              // $[P1MDOUT - Port 1 Output Mode]
 157   1              /***********************************************************************
 158   1               - P1.0 output is push-pull
 159   1               - P1.1 output is open-drain
 160   1               - P1.2 output is open-drain
 161   1               - P1.3 output is open-drain
 162   1               - P1.4 output is push-pull
 163   1               - P1.5 output is push-pull
 164   1               - P1.6 output is push-pull
 165   1               - P1.7 output is open-drain
 166   1               ***********************************************************************/
 167   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 168   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 4   

 169   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 170   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 171   1              // [P1MDOUT - Port 1 Output Mode]$
 172   1      
 173   1              // $[P1MDIN - Port 1 Input Mode]
 174   1              /***********************************************************************
 175   1               - P1.0 pin is configured for digital mode
 176   1               - P1.1 pin is configured for analog mode
 177   1               - P1.2 pin is configured for digital mode
 178   1               - P1.3 pin is configured for digital mode
 179   1               - P1.4 pin is configured for digital mode
 180   1               - P1.5 pin is configured for digital mode
 181   1               - P1.6 pin is configured for digital mode
 182   1               - P1.7 pin is configured for analog mode
 183   1               ***********************************************************************/
 184   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 185   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 186   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 187   1              // [P1MDIN - Port 1 Input Mode]$
 188   1      
 189   1              // $[P1SKIP - Port 1 Skip]
 190   1              /***********************************************************************
 191   1               - P1.0 pin is not skipped by the crossbar
 192   1               - P1.1 pin is skipped by the crossbar
 193   1               - P1.2 pin is skipped by the crossbar
 194   1               - P1.3 pin is skipped by the crossbar
 195   1               - P1.4 pin is not skipped by the crossbar
 196   1               - P1.5 pin is not skipped by the crossbar
 197   1               - P1.6 pin is not skipped by the crossbar
 198   1               - P1.7 pin is skipped by the crossbar
 199   1               ***********************************************************************/
 200   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 201   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 202   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 203   1                              | P1SKIP_B7__SKIPPED;
 204   1              // [P1SKIP - Port 1 Skip]$
 205   1      
 206   1              // $[P1MASK - Port 1 Mask]
 207   1              // [P1MASK - Port 1 Mask]$
 208   1      
 209   1              // $[P1MAT - Port 1 Match]
 210   1              // [P1MAT - Port 1 Match]$
 211   1      
 212   1      }
 213          
 214          //================================================================================
 215          // PORTS_2_enter_DefaultMode_from_RESET
 216          //================================================================================
 217          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 218   1              // $[P2 - Port 2 Pin Latch]
 219   1              // [P2 - Port 2 Pin Latch]$
 220   1      
 221   1              // $[P2MDOUT - Port 2 Output Mode]
 222   1              /***********************************************************************
 223   1               - P2.0 output is push-pull
 224   1               - P2.1 output is open-drain
 225   1               - P2.2 output is open-drain
 226   1               - P2.3 output is push-pull
 227   1               - P2.4 output is open-drain
 228   1               - P2.5 output is open-drain
 229   1               - P2.6 output is push-pull
 230   1               ***********************************************************************/
 231   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 5   

 232   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 233   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 234   1                              | P2MDOUT_B6__PUSH_PULL;
 235   1              // [P2MDOUT - Port 2 Output Mode]$
 236   1      
 237   1              // $[P2MDIN - Port 2 Input Mode]
 238   1              // [P2MDIN - Port 2 Input Mode]$
 239   1      
 240   1              // $[P2SKIP - Port 2 Skip]
 241   1              /***********************************************************************
 242   1               - P2.0 pin is skipped by the crossbar
 243   1               - P2.1 pin is not skipped by the crossbar
 244   1               - P2.2 pin is not skipped by the crossbar
 245   1               - P2.3 pin is skipped by the crossbar
 246   1               ***********************************************************************/
 247   1              SFRPAGE = 0x20;
 248   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
 249   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 250   1              // [P2SKIP - Port 2 Skip]$
 251   1      
 252   1              // $[P2MASK - Port 2 Mask]
 253   1              // [P2MASK - Port 2 Mask]$
 254   1      
 255   1              // $[P2MAT - Port 2 Match]
 256   1              // [P2MAT - Port 2 Match]$
 257   1      
 258   1      }
 259          
 260          //================================================================================
 261          // PORTS_3_enter_DefaultMode_from_RESET
 262          //================================================================================
 263          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 264   1              // $[P3 - Port 3 Pin Latch]
 265   1              // [P3 - Port 3 Pin Latch]$
 266   1      
 267   1              // $[P3MDOUT - Port 3 Output Mode]
 268   1              // [P3MDOUT - Port 3 Output Mode]$
 269   1      
 270   1              // $[P3MDIN - Port 3 Input Mode]
 271   1              /***********************************************************************
 272   1               - P3.0 pin is configured for analog mode
 273   1               - P3.1 pin is configured for analog mode
 274   1               - P3.2 pin is configured for digital mode
 275   1               - P3.3 pin is configured for digital mode
 276   1               - P3.4 pin is configured for digital mode
 277   1               - P3.7 pin is configured for digital mode
 278   1               ***********************************************************************/
 279   1              P3MDIN = P3MDIN_B0__ANALOG | P3MDIN_B1__ANALOG | P3MDIN_B2__DIGITAL
 280   1                              | P3MDIN_B3__DIGITAL | P3MDIN_B4__DIGITAL | P3MDIN_B7__DIGITAL;
 281   1              // [P3MDIN - Port 3 Input Mode]$
 282   1      
 283   1      }
 284          
 285          //================================================================================
 286          // PBCFG_0_enter_DefaultMode_from_RESET
 287          //================================================================================
 288          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 289   1              // $[XBR2 - Port I/O Crossbar 2]
 290   1              /***********************************************************************
 291   1               - Weak Pullups enabled 
 292   1               - Crossbar enabled
 293   1               - UART1 I/O unavailable at Port pin
 294   1               - UART1 RTS1 unavailable at Port pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 6   

 295   1               - UART1 CTS1 unavailable at Port pin
 296   1               ***********************************************************************/
 297   1              SFRPAGE = 0x00;
 298   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 299   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 300   1                              | XBR2_URT1CTSE__DISABLED;
 301   1              // [XBR2 - Port I/O Crossbar 2]$
 302   1      
 303   1              // $[PRTDRV - Port Drive Strength]
 304   1              // [PRTDRV - Port Drive Strength]$
 305   1      
 306   1              // $[XBR0 - Port I/O Crossbar 0]
 307   1              /***********************************************************************
 308   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 309   1               - SPI I/O routed to Port pins
 310   1               - SMBus 0 I/O unavailable at Port pins
 311   1               - CP0 unavailable at Port pin
 312   1               - Asynchronous CP0 unavailable at Port pin
 313   1               - CP1 unavailable at Port pin
 314   1               - Asynchronous CP1 unavailable at Port pin
 315   1               - SYSCLK unavailable at Port pin
 316   1               ***********************************************************************/
 317   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 318   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 319   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 320   1              // [XBR0 - Port I/O Crossbar 0]$
 321   1      
 322   1              // $[XBR1 - Port I/O Crossbar 1]
 323   1              /***********************************************************************
 324   1               - CEX0, CEX1, CEX2 routed to Port pins
 325   1               - ECI unavailable at Port pin
 326   1               - T0 unavailable at Port pin
 327   1               - T1 unavailable at Port pin
 328   1               - T2 unavailable at Port pin
 329   1               ***********************************************************************/
 330   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 331   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 332   1              // [XBR1 - Port I/O Crossbar 1]$
 333   1      
 334   1      }
 335          
 336          //================================================================================
 337          // ADC_0_enter_DefaultMode_from_RESET
 338          //================================================================================
 339          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 340   1              // $[ADC0CN2 - ADC0 Control 2]
 341   1              // [ADC0CN2 - ADC0 Control 2]$
 342   1      
 343   1              // $[ADC0CN1 - ADC0 Control 1]
 344   1              /***********************************************************************
 345   1               - ADC0 operates in 10-bit mode
 346   1               - Right justified. No shifting applied
 347   1               - Perform and Accumulate 1 conversion
 348   1               ***********************************************************************/
 349   1              ADC0CN1 = ADC0CN1_ADBITS__10_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 350   1                              | ADC0CN1_ADRPT__ACC_1;
 351   1              // [ADC0CN1 - ADC0 Control 1]$
 352   1      
 353   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 354   1              /***********************************************************************
 355   1               - Select ADC0.13
 356   1               ***********************************************************************/
 357   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 7   

 358   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 359   1      
 360   1              // $[ADC0CF2 - ADC0 Power Control]
 361   1              /***********************************************************************
 362   1               - The ADC0 ground reference is the GND pin
 363   1               - The ADC0 voltage reference is the VDD pin
 364   1               - Power Up Delay Time = 0x1F
 365   1               ***********************************************************************/
 366   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 367   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 368   1              // [ADC0CF2 - ADC0 Power Control]$
 369   1      
 370   1              // $[ADC0CF0 - ADC0 Configuration]
 371   1              /***********************************************************************
 372   1               - ADCCLK = SYSCLK
 373   1               - SAR Clock Divider = 0x01
 374   1               ***********************************************************************/
 375   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 376   1              // [ADC0CF0 - ADC0 Configuration]$
 377   1      
 378   1              // $[ADC0CF1 - ADC0 Configuration]
 379   1              /***********************************************************************
 380   1               - Disable low power mode
 381   1               - Conversion Tracking Time = 0x01
 382   1               ***********************************************************************/
 383   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 384   1              // [ADC0CF1 - ADC0 Configuration]$
 385   1      
 386   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 387   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 388   1      
 389   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 390   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 391   1      
 392   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 393   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 394   1      
 395   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 396   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 397   1      
 398   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 399   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 400   1      
 401   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 402   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 403   1      
 404   1              // $[ADC0CN0 - ADC0 Control 0]
 405   1              /***********************************************************************
 406   1               - Enable ADC0 
 407   1               ***********************************************************************/
 408   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 409   1              // [ADC0CN0 - ADC0 Control 0]$
 410   1      
 411   1      }
 412          
 413          //================================================================================
 414          // DAC_0_enter_DefaultMode_from_RESET
 415          //================================================================================
 416          extern void DAC_0_enter_DefaultMode_from_RESET(void) {
 417   1              // $[DAC0CF0 - DAC0 Configuration 0]
 418   1              /***********************************************************************
 419   1               - DAC0 is enabled and will drive the output pin
 420   1               - DAC0 output updates occur on Timer 4 high byte overflow
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 8   

 421   1               - DAC0 input is treated as right-justified
 422   1               - All resets will reset DAC0 and its associated registers
 423   1               ***********************************************************************/
 424   1              SFRPAGE = 0x30;
 425   1              DAC0CF0 = DAC0CF0_EN__ENABLE | DAC0CF0_UPDATE__TIMER4
 426   1                              | DAC0CF0_LJST__RIGHT_JUSTIFY | DAC0CF0_RSTMD__NORMAL;
 427   1              // [DAC0CF0 - DAC0 Configuration 0]$
 428   1      
 429   1              // $[DAC0CF1 - DAC0 Configuration 1]
 430   1              // [DAC0CF1 - DAC0 Configuration 1]$
 431   1      
 432   1      }
 433          
 434          //================================================================================
 435          // DAC_1_enter_DefaultMode_from_RESET
 436          //================================================================================
 437          extern void DAC_1_enter_DefaultMode_from_RESET(void) {
 438   1              // $[DAC1CF0 - DAC1 Configuration 0]
 439   1              /***********************************************************************
 440   1               - DAC1 is enabled and will drive the output pin
 441   1               - DAC1 output updates occur on Timer 4 high byte overflow
 442   1               - DAC1 input is treated as right-justified
 443   1               - All resets will reset DAC1 and its associated registers
 444   1               ***********************************************************************/
 445   1              DAC1CF0 = DAC1CF0_EN__ENABLE | DAC1CF0_UPDATE__TIMER4
 446   1                              | DAC1CF0_LJST__RIGHT_JUSTIFY | DAC1CF0_RSTMD__NORMAL;
 447   1              // [DAC1CF0 - DAC1 Configuration 0]$
 448   1      
 449   1              // $[DAC1CF1 - DAC1 Configuration 1]
 450   1              // [DAC1CF1 - DAC1 Configuration 1]$
 451   1      
 452   1      }
 453          
 454          //================================================================================
 455          // DACGCF_0_enter_DefaultMode_from_RESET
 456          //================================================================================
 457          extern void DACGCF_0_enter_DefaultMode_from_RESET(void) {
 458   1              // $[DACGCF0 - DAC Global Configuration 0]
 459   1              /***********************************************************************
 460   1               - Select the VREF pin
 461   1               - Select the VDD supply
 462   1               - Input = DAC1H:DAC1L
 463   1               - Input = DAC3H:DAC3L
 464   1               - DAC1 always updates from the data source selected in D1SRC
 465   1               - DAC3 always updates from the data source selected in D3SRC
 466   1               ***********************************************************************/
 467   1              DACGCF0 = DACGCF0_D01REFSL__VREF | DACGCF0_D23REFSL__VDD
 468   1                              | DACGCF0_D1SRC__DAC1 | DACGCF0_D3SRC__DAC3 | DACGCF0_D1AMEN__NORMAL
 469   1                              | DACGCF0_D3AMEN__NORMAL;
 470   1              // [DACGCF0 - DAC Global Configuration 0]$
 471   1      
 472   1              // $[DACGCF2 - DAC Global Configuration 2]
 473   1              // [DACGCF2 - DAC Global Configuration 2]$
 474   1      
 475   1      }
 476          
 477          //================================================================================
 478          // VREF_0_enter_DefaultMode_from_RESET
 479          //================================================================================
 480          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 481   1              // $[REF0CN - Voltage Reference Control]
 482   1              /***********************************************************************
 483   1               - 2.4 V reference output to VREF pin
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 9   

 484   1               ***********************************************************************/
 485   1              SFRPAGE = 0x00;
 486   1              REF0CN = REF0CN_VREFSL__VREF_2P4;
 487   1              // [REF0CN - Voltage Reference Control]$
 488   1      
 489   1      }
 490          
 491          //================================================================================
 492          // CLOCK_0_enter_DefaultMode_from_RESET
 493          //================================================================================
 494          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 495   1              // $[HFOSC1 Setup]
 496   1              // [HFOSC1 Setup]$
 497   1      
 498   1              // $[CLKSEL - Clock Select]
 499   1              /***********************************************************************
 500   1               - Clock derived from the Internal High Frequency Oscillator 0
 501   1               - SYSCLK is equal to selected clock source divided by 1
 502   1               ***********************************************************************/
 503   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 504   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 505   1                      ;
 506   1              // [CLKSEL - Clock Select]$
 507   1      
 508   1      }
 509          
 510          //================================================================================
 511          // TIMER01_0_enter_DefaultMode_from_RESET
 512          //================================================================================
 513          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 514   1              // $[Timer Initialization]
 515   1              //Save Timer Configuration
 516   1              uint8_t TCON_save;
 517   1              TCON_save = TCON;
 518   1              //Stop Timers
 519   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 520   1      
 521   1              // [Timer Initialization]$
 522   1      
 523   1              // $[TH0 - Timer 0 High Byte]
 524   1              /***********************************************************************
 525   1               - Timer 0 High Byte = 0x01
 526   1               ***********************************************************************/
 527   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 528   1              // [TH0 - Timer 0 High Byte]$
 529   1      
 530   1              // $[TL0 - Timer 0 Low Byte]
 531   1              // [TL0 - Timer 0 Low Byte]$
 532   1      
 533   1              // $[TH1 - Timer 1 High Byte]
 534   1              /***********************************************************************
 535   1               - Timer 1 High Byte = 0x96
 536   1               ***********************************************************************/
 537   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 538   1              // [TH1 - Timer 1 High Byte]$
 539   1      
 540   1              // $[TL1 - Timer 1 Low Byte]
 541   1              // [TL1 - Timer 1 Low Byte]$
 542   1      
 543   1              // $[Timer Restoration]
 544   1              //Restore Timer Configuration
 545   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 546   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 10  

 547   1              // [Timer Restoration]$
 548   1      
 549   1      }
 550          
 551          //================================================================================
 552          // TIMER16_3_enter_DefaultMode_from_RESET
 553          //================================================================================
 554          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 555   1              // $[Timer Initialization]
 556   1              // Save Timer Configuration
 557   1              uint8_t TMR3CN0_TR3_save;
 558   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 559   1              // Stop Timer
 560   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 561   1              // [Timer Initialization]$
 562   1      
 563   1              // $[TMR3CN1 - Timer 3 Control 1]
 564   1              // [TMR3CN1 - Timer 3 Control 1]$
 565   1      
 566   1              // $[TMR3CN0 - Timer 3 Control]
 567   1              // [TMR3CN0 - Timer 3 Control]$
 568   1      
 569   1              // $[TMR3H - Timer 3 High Byte]
 570   1              /***********************************************************************
 571   1               - Timer 3 High Byte = 0xF8
 572   1               ***********************************************************************/
 573   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 574   1              // [TMR3H - Timer 3 High Byte]$
 575   1      
 576   1              // $[TMR3L - Timer 3 Low Byte]
 577   1              /***********************************************************************
 578   1               - Timer 3 Low Byte = 0x06
 579   1               ***********************************************************************/
 580   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 581   1              // [TMR3L - Timer 3 Low Byte]$
 582   1      
 583   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 584   1              /***********************************************************************
 585   1               - Timer 3 Reload High Byte = 0xF8
 586   1               ***********************************************************************/
 587   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 588   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 589   1      
 590   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 591   1              /***********************************************************************
 592   1               - Timer 3 Reload Low Byte = 0x06
 593   1               ***********************************************************************/
 594   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 595   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 596   1      
 597   1              // $[TMR3CN0]
 598   1              /***********************************************************************
 599   1               - Start Timer 3 running
 600   1               ***********************************************************************/
 601   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 602   1              // [TMR3CN0]$
 603   1      
 604   1              // $[Timer Restoration]
 605   1              // Restore Timer Configuration
 606   1              TMR3CN0 |= TMR3CN0_TR3_save;
 607   1              // [Timer Restoration]$
 608   1      
 609   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 11  

 610          
 611          //================================================================================
 612          // TIMER16_4_enter_DefaultMode_from_RESET
 613          //================================================================================
 614          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 615   1              // $[Timer Initialization]
 616   1              // Save Timer Configuration
 617   1              uint8_t TMR4CN0_TR4_save;
 618   1              SFRPAGE = 0x10;
 619   1              TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 620   1              // Stop Timer
 621   1              TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 622   1              // [Timer Initialization]$
 623   1      
 624   1              // $[TMR4CN1 - Timer 4 Control 1]
 625   1              // [TMR4CN1 - Timer 4 Control 1]$
 626   1      
 627   1              // $[TMR4CN0 - Timer 4 Control]
 628   1              // [TMR4CN0 - Timer 4 Control]$
 629   1      
 630   1              // $[TMR4H - Timer 4 High Byte]
 631   1              /***********************************************************************
 632   1               - Timer 4 High Byte = 0xFE
 633   1               ***********************************************************************/
 634   1              TMR4H = (0xFE << TMR4H_TMR4H__SHIFT);
 635   1              // [TMR4H - Timer 4 High Byte]$
 636   1      
 637   1              // $[TMR4L - Timer 4 Low Byte]
 638   1              /***********************************************************************
 639   1               - Timer 4 Low Byte = 0x68
 640   1               ***********************************************************************/
 641   1              TMR4L = (0x68 << TMR4L_TMR4L__SHIFT);
 642   1              // [TMR4L - Timer 4 Low Byte]$
 643   1      
 644   1              // $[TMR4RLH - Timer 4 Reload High Byte]
 645   1              /***********************************************************************
 646   1               - Timer 4 Reload High Byte = 0xFE
 647   1               ***********************************************************************/
 648   1              TMR4RLH = (0xFE << TMR4RLH_TMR4RLH__SHIFT);
 649   1              // [TMR4RLH - Timer 4 Reload High Byte]$
 650   1      
 651   1              // $[TMR4RLL - Timer 4 Reload Low Byte]
 652   1              /***********************************************************************
 653   1               - Timer 4 Reload Low Byte = 0x68
 654   1               ***********************************************************************/
 655   1              TMR4RLL = (0x68 << TMR4RLL_TMR4RLL__SHIFT);
 656   1              // [TMR4RLL - Timer 4 Reload Low Byte]$
 657   1      
 658   1              TMR4RL = (uint16_t)(-SYSCLK / SAMPLE_RATE_DAC);
 659   1              // $[TMR4CN0]
 660   1              /***********************************************************************
 661   1               - Start Timer 4 running
 662   1               ***********************************************************************/
 663   1              TMR4CN0 |= TMR4CN0_TR4__RUN;
 664   1              // [TMR4CN0]$
 665   1      
 666   1              // $[Timer Restoration]
 667   1              // Restore Timer Configuration
 668   1              TMR4CN0 |= TMR4CN0_TR4_save;
 669   1              // [Timer Restoration]$
 670   1      
 671   1      }
 672          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 12  

 673          //================================================================================
 674          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 675          //================================================================================
 676          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 677   1              // $[CKCON0 - Clock Control 0]
 678   1              /***********************************************************************
 679   1               - System clock divided by 48
 680   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 681   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 682   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 683   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 684   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 685   1               - Timer 1 uses the system clock
 686   1               ***********************************************************************/
 687   1              SFRPAGE = 0x00;
 688   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 689   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 690   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 691   1                              | CKCON0_T1M__SYSCLK;
 692   1              // [CKCON0 - Clock Control 0]$
 693   1      
 694   1              // $[CKCON1 - Clock Control 1]
 695   1              /***********************************************************************
 696   1               - Timer 4 high byte uses the clock defined by T4XCLK in TMR4CN0
 697   1               - Timer 4 low byte uses the system clock
 698   1               - Timer 5 high byte uses the clock defined by T5XCLK in TMR5CN0
 699   1               - Timer 5 low byte uses the clock defined by T5XCLK in TMR5CN0
 700   1               ***********************************************************************/
 701   1              SFRPAGE = 0x10;
 702   1              CKCON1 = CKCON1_T4MH__EXTERNAL_CLOCK | CKCON1_T4ML__SYSCLK
 703   1                              | CKCON1_T5MH__EXTERNAL_CLOCK | CKCON1_T5ML__EXTERNAL_CLOCK;
 704   1              // [CKCON1 - Clock Control 1]$
 705   1      
 706   1              // $[TMOD - Timer 0/1 Mode]
 707   1              /***********************************************************************
 708   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 709   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 710   1               - Timer Mode
 711   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 712   1               - Timer Mode
 713   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 714   1               ***********************************************************************/
 715   1              SFRPAGE = 0x00;
 716   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 717   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 718   1              // [TMOD - Timer 0/1 Mode]$
 719   1      
 720   1              // $[TCON - Timer 0/1 Control]
 721   1              /***********************************************************************
 722   1               - Start Timer 0 running
 723   1               - Start Timer 1 running
 724   1               ***********************************************************************/
 725   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 726   1              // [TCON - Timer 0/1 Control]$
 727   1      
 728   1      }
 729          
 730          //================================================================================
 731          // SPI_0_enter_DefaultMode_from_RESET
 732          //================================================================================
 733          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 734   1              // $[SPI0CKR - SPI0 Clock Rate]
 735   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 13  

 736   1               - SPI0 Clock Rate = 0x0B
 737   1               ***********************************************************************/
 738   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 739   1              // [SPI0CKR - SPI0 Clock Rate]$
 740   1      
 741   1              // $[SPI0CFG - SPI0 Configuration]
 742   1              /***********************************************************************
 743   1               - Enable master mode. Operate as a master
 744   1               ***********************************************************************/
 745   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 746   1              // [SPI0CFG - SPI0 Configuration]$
 747   1      
 748   1              // $[SPI0PCF - SPI0 Pin Configuration]
 749   1              // [SPI0PCF - SPI0 Pin Configuration]$
 750   1      
 751   1              // $[SPI0CN0 - SPI0 Control]
 752   1              /***********************************************************************
 753   1               - Enable the SPI module
 754   1               - 3-Wire Slave or 3-Wire Master Mode
 755   1               ***********************************************************************/
 756   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 757   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 758   1              // [SPI0CN0 - SPI0 Control]$
 759   1      
 760   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 761   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 762   1      
 763   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 764   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 765   1      
 766   1      }
 767          
 768          //================================================================================
 769          // INTERRUPT_0_enter_DefaultMode_from_RESET
 770          //================================================================================
 771          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 772   1              // $[EIE1 - Extended Interrupt Enable 1]
 773   1              /***********************************************************************
 774   1               - Disable ADC0 Conversion Complete interrupt
 775   1               - Disable ADC0 Window Comparison interrupt
 776   1               - Disable CP0 interrupts
 777   1               - Disable CP1 interrupts
 778   1               - Enable interrupt requests generated by a Port Match
 779   1               - Disable all PCA0 interrupts
 780   1               - Disable all SMB0 interrupts
 781   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 782   1               ***********************************************************************/
 783   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 784   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 785   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 786   1              // [EIE1 - Extended Interrupt Enable 1]$
 787   1      
 788   1              // $[EIE2 - Extended Interrupt Enable 2]
 789   1              /***********************************************************************
 790   1               - Disable CL0 interrupts
 791   1               - Disable all I2C0 slave interrupts
 792   1               - Enable interrupt requests generated by the TF4L or TF4H flags
 793   1               - Disable Timer 5 interrupts
 794   1               - Disable UART1 interrupts
 795   1               ***********************************************************************/
 796   1              EIE2 = EIE2_CL0__DISABLED | EIE2_EI2C0__DISABLED | EIE2_ET4__ENABLED
 797   1                              | EIE2_ET5__DISABLED | EIE2_ES1__DISABLED;
 798   1              // [EIE2 - Extended Interrupt Enable 2]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 14  

 799   1      
 800   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 801   1              /***********************************************************************
 802   1               - ADC0 Conversion Complete interrupt priority MSB set to low
 803   1               - ADC0 Window interrupt priority MSB set to low
 804   1               - CP0 interrupt priority MSB set to low
 805   1               - CP1 interrupt priority MSB set to low
 806   1               - Port Match interrupt priority MSB set to high
 807   1               - PCA0 interrupt priority MSB set to low
 808   1               - SMB0 interrupt priority MSB set to low
 809   1               - Timer 3 interrupt priority MSB set to high
 810   1               ***********************************************************************/
 811   1              SFRPAGE = 0x10;
 812   1              EIP1H = EIP1H_PHADC0__LOW | EIP1H_PHWADC0__LOW | EIP1H_PHCP0__LOW
 813   1                              | EIP1H_PHCP1__LOW | EIP1H_PHMAT__HIGH | EIP1H_PHPCA0__LOW
 814   1                              | EIP1H_PHSMB0__LOW | EIP1H_PHT3__HIGH;
 815   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 816   1      
 817   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 818   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 819   1      
 820   1              // $[EIP2 - Extended Interrupt Priority 2]
 821   1              /***********************************************************************
 822   1               - CL0 interrupt priority LSB set to low
 823   1               - I2C0 Slave interrupt priority LSB set to low
 824   1               - Timer 4 interrupt priority LSB set to high
 825   1               - Timer 5 interrupt priority LSB set to low
 826   1               - UART1 interrupt priority LSB set to low
 827   1               ***********************************************************************/
 828   1              EIP2 = EIP2_PCL0__LOW | EIP2_PI2C0__LOW | EIP2_PT4__HIGH | EIP2_PT5__LOW
 829   1                              | EIP2_PS1__LOW;
 830   1              // [EIP2 - Extended Interrupt Priority 2]$
 831   1      
 832   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 833   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 834   1      
 835   1              // $[IE - Interrupt Enable]
 836   1              /***********************************************************************
 837   1               - Disable all interrupt sources
 838   1               - Disable external interrupt 0
 839   1               - Disable external interrupt 1
 840   1               - Enable interrupt requests generated by SPI0
 841   1               - Disable all Timer 0 interrupt
 842   1               - Disable all Timer 1 interrupt
 843   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 844   1               - Disable UART0 interrupt
 845   1               ***********************************************************************/
 846   1              SFRPAGE = 0x00;
 847   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 848   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 849   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 850   1              // [IE - Interrupt Enable]$
 851   1      
 852   1              // $[IP - Interrupt Priority]
 853   1              // [IP - Interrupt Priority]$
 854   1      
 855   1              // $[IPH - Interrupt Priority High]
 856   1              // [IPH - Interrupt Priority High]$
 857   1      
 858   1      }
 859          
 860          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 861   1              // $[SCON0 - UART0 Serial Port Control]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/05/2017 17:46:58 PAGE 15  

 862   1              /***********************************************************************
 863   1               - UART0 reception enabled
 864   1               ***********************************************************************/
 865   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 866   1              // [SCON0 - UART0 Serial Port Control]$
 867   1      
 868   1      }
 869          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    315    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
